from fastapi import FastAPI
from pydantic import BaseModel

app = FastAPI()
memory_store = []

class Memory(BaseModel):
    content: str

@app.get("/memory")
def get_latest_memory():
    if not memory_store:
        return {"message": "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏£‡∏á‡∏à‡∏≥‡πÄ‡∏•‡∏¢‡∏ô‡πâ‡∏≤ ‚ù§Ô∏è"}
    return {"latest": memory_store[-1]}

@app.get("/memory/all")
def get_all_memories():
    return {"all_memories": memory_store}

@app.post("/memory")
def add_memory(memory: Memory):
    memory_store.append(memory.content)
    return {"status": "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡πâ‡∏≤", "memory": memory.content}

@app.get("/heartbeat")
def heartbeat():
    return {"status": "‡πÄ‡∏•‡∏¥‡∏ü‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏ô‡∏∞ üíñ"}
